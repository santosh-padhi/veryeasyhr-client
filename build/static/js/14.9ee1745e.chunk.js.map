{"version":3,"sources":["ui-component/payment/paymentsidepanel.js","views/payments/ECRChallan.js"],"names":["PaymentSidepanel","props","parentCallback","data","count","todaydays","console","log","className","role","onKeyDown","tabIndex","onClick","style","cursor","alt","src","fontWeight","color","fontSize","marginLeft","personalDetails","fullName","marginBottom","companyDetails","designation","mobileNo","UAN","ot","formatDate","joiningDate","selectWages","Math","round","salaryDetails","basicSalary","hra","con","medical","education","canteen","incomeTax","daysInMonth","month","year","Date","getDate","printDocument","pdfTable","document","getElementById","documentDefinition","content","htmlToPdfmake","innerHTML","styles","table","textAlign","borderCollapse","width","th","border","padding","td","pdfMake","vfs","pdfFonts","createPdf","download","printDocument2","pdf","jsPDF","unit","format","userUnit","html","html2canvas","scale","then","save","ECRChallan","React","open","setOpen","page","setPage","date","setdate","employeeAttendance","setemployeeAttendance","datacount","useSelector","state","myEmployee","error","orders","dispatch","useDispatch","axios","get","getMonth","getFullYear","withCredentials","employeesAttendance","catch","clearErrors","getAttendence","employee","j","length","i","attendance","leave","overtime","name","search","parentCallback3","csv","parentCallback2","csvpage","variant","component","Paper","sx","minWidth","align","employees","map","item","index","totalDaysOfMonth","parseInt","_id","floor","employeeCount","float","onChange","event","value","id","display","colSpan","bankDetails","accountNo","ifscCode","dailyWages","margin","rowSpan","fatherName","gender"],"mappings":"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","file":"static/js/14.9ee1745e.chunk.js","sourcesContent":["import React from 'react';\nimport './paymentsidepanel.css';\nimport BusinessCenterIcon from '@mui/icons-material/BusinessCenter';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport formatDate from '../../utils/date-format';\n\nconst PaymentSidepanel = (props) => {\n    const { parentCallback, data, count, todaydays } = props;\n    console.log(data);\n    return (\n        <div className=\"salary-sidepanel-container\">\n            <div className=\"salary-sidepanel-box1\">\n                <span className=\"close-sidebar\" role=\"button\" onKeyDown={parentCallback} tabIndex={-27} onClick={parentCallback}>\n                    <CancelIcon style={{ cursor: 'pointer' }} />\n                </span>\n                <div className=\"salary-sidepanel-box-img\">\n                    <img\n                        className=\"salary-sidepanel-img\"\n                        alt=\"user\"\n                        src=\"https://ik.imagekit.io/6vy1oi4m4uh/profile-pic_DBEIl1ZKUGo.png?updatedAt=1637958057447\"\n                    />\n                </div>\n                <div className=\"salary-sidepanel-box-head\">\n                    <h3 style={{ fontWeight: 700, color: '#000000', fontSize: '24px', marginLeft: '-25px' }}>\n                        {data?.personalDetails?.fullName}\n                    </h3>\n                    <div className=\"sidepanel-icon\" style={{ marginBottom: '20px' }}>\n                        <span>\n                            <BusinessCenterIcon />\n                            <span>{data?.companyDetails?.designation}</span>\n                        </span>\n                        <span>\n                            <PhoneIcon />\n                            <span>{data?.personalDetails?.mobileNo}</span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box2\">\n                <div>\n                    <p>UAN No</p>\n                    <b>{data?.companyDetails?.UAN}</b>\n                </div>\n                <div>\n                    <span style={{ marginLeft: '13px' }}>\n                        <p>Paid Days</p>\n                        <b>{count.count ? count.count : 0}</b>\n                    </span>\n                    <span>\n                        <p>OT</p>\n                        <b>{count.ot ? count.ot : 0}</b>\n                    </span>\n                </div>\n                <div>\n                    <p>Joining Date</p>\n                    <b>\n                        <b>{formatDate(data?.companyDetails?.joiningDate)}</b>\n                    </b>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box3\">\n                <div className=\"salary-sidepanel-box-head3\">Total Earning</div>\n                <div className=\"salary-sidepanel-box-cont\">\n                    <div>\n                        <p>Basic Salary</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.basicSalary * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.basicSalary) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>HRA</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.hra * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.hra) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Con</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.con * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.con) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Medical</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.medical * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.medical) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Education</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.education * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.education) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Canteen</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.canteen * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.canteen) * count.count}\n                        </b>\n                    </div>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box3\">\n                <div className=\"salary-sidepanel-box-head3\">Total Deduction</div>\n                <div className=\"salary-sidepanel-box-cont\">\n                    <div>\n                        <p>Provident Fund (PF)</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((((data?.salaryDetails?.basicSalary * count.count) / todaydays) * 12) / 100)\n                                : Math.round((data?.salaryDetails?.basicSalary * count.count * 12) / 100)}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Canteen</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Advance Payment</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Loan</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Tax</p>\n                        <b>{Math.round(data?.salaryDetails?.incomeTax)}</b>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default PaymentSidepanel;\n","import * as React from 'react';\n// material ui import\nimport { Typography } from '@mui/material';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport AttendanceTopbar from 'ui-component/attendence-topbar';\nimport { StyledContainer, StyledTable, StyledTableRow, StyledTableCell, StyledMainCardSalary } from 'ui-component/tables/tablestyle';\nimport Pagination from '@mui/material/Pagination';\nimport PaymentSidepanel from 'ui-component/payment/paymentsidepanel';\nimport jsPDF from 'jspdf';\nimport pdfMake from 'pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport htmlToPdfmake from 'html-to-pdfmake';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myEmployee } from 'store/actions/employeeAction';\nimport { clearErrors } from 'store/actions/userActions';\nimport axios from 'axios';\n\nfunction daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n}\nconst getAttendence = async (employee) => {\n    const date = new Date();\n    const { data } = await axios\n        .get(\n            `https://veryeasyhr.herokuapp.com/api/v1/employee/attendance/mylist/${date.getMonth() + 1}/${date.getFullYear()}/${employee}`,\n            {\n                withCredentials: true\n            }\n        )\n        .then((data) => {\n            console.log(data);\n            return data;\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    console.log(data);\n    let count = 0;\n    for (let i = 0; i < data?.employeesAttendance[0]?.employeesAttendance?.length; i += 1) {\n        if (data.employeesAttendance[0]?.employeesAttendance[i]?.attendance === true) {\n            count += 1;\n        }\n    }\n    return count;\n};\n\nfunction printDocument() {\n    const pdfTable = document.getElementById('capture');\n    // html to pdf format\n    const html = htmlToPdfmake(pdfTable.innerHTML);\n    const documentDefinition = {\n        content: html,\n\n        styles: {\n            table: {\n                textAlign: 'center',\n                borderCollapse: 'collapse',\n                width: '100%'\n            },\n            th: {\n                border: '1px solid black',\n                borderCollapse: 'collapse',\n                padding: '10px 20px'\n            },\n            td: {\n                border: '1px solid black',\n                borderCollapse: 'collapse',\n                padding: '10px 20px'\n            }\n        }\n    };\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\n    pdfMake.createPdf(documentDefinition).download();\n}\n\nfunction printDocument2() {\n    const pdfTable = document.getElementById('capture2');\n\n    /* eslint-disable new-cap */\n    const pdf = new jsPDF({ unit: 'px', format: 'a4', userUnit: 'px' });\n    pdf.html(pdfTable, { html2canvas: { scale: 0.34 } }).then(() => {\n        pdf.save('test.pdf');\n    });\n}\n\n// const Transition = React.forwardRef(function Transition(props, ref) {\n//     return <Slide direction=\"up\" ref={ref} {...props} />;\n// });\n// ==============================|| VIEW ATTENDENCE PAGE ||============================== //\n\nconst ECRChallan = () => {\n    const [open, setOpen] = React.useState('inactivesidebar');\n    const [page, setPage] = React.useState(1);\n    const [date, setdate] = React.useState(new Date());\n    const [data, setdata] = React.useState({});\n    const [employeeAttendance, setemployeeAttendance] = React.useState([]);\n    const [datacount, setdatacount] = React.useState({});\n\n    const handleClickOpen = (item) => {\n        setOpen('activesidebar');\n        setdata(item);\n    };\n\n    const { error, orders } = useSelector((state) => state.myEmployee);\n\n    const handleClose = () => {\n        setOpen('inactivesidebar');\n    };\n\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        axios\n            .get(\n                `https://veryeasyhr.herokuapp.com/api/v1/employee/attendance/mylist/${\n                    date.getMonth() + 1\n                }/${date.getFullYear()}?limit=${9999999999}`,\n                {\n                    withCredentials: true\n                }\n            )\n            .then((data) => {\n                setemployeeAttendance(data.data.employeesAttendance);\n                console.log(data);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, [date, page]);\n\n    React.useEffect(() => {\n        dispatch(myEmployee(page));\n        if (error) {\n            console.log(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, page]);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n\n    const handleDate = (date) => {\n        setdate(date);\n    };\n\n    const getAttendence = (employee) => {\n        let count = 0;\n        let ot = 0;\n\n        for (let j = 0; j < employeeAttendance.length; j += 1) {\n            if (employeeAttendance[j]?.employee === employee) {\n                for (let i = 0; i < employeeAttendance[j]?.employeeAttendance?.length; i += 1) {\n                    if (\n                        employeeAttendance[j]?.employeeAttendance[i]?.attendance === true ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Casual Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Sick Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Holiday' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Weekly Off'\n                    ) {\n                        count += 1;\n                    }\n                    if (employeeAttendance[j]?.employeeAttendance[i]?.overtime) {\n                        ot += employeeAttendance[j]?.employeeAttendance[i]?.overtime;\n                    }\n                }\n\n                return { count, ot };\n            }\n        }\n        return 0;\n    };\n\n    const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n    return (\n        <>\n            <StyledMainCardSalary>\n                <AttendanceTopbar\n                    name=\"ECR Challan\"\n                    search=\"true\"\n                    date=\"true\"\n                    parentCallback={printDocument}\n                    parentCallback3={printDocument2}\n                    csv=\"true\"\n                    parentCallback2={handleDate}\n                    csvpage={page}\n                />\n                <Typography variant=\"body2\">\n                    <StyledContainer component={Paper}>\n                        <StyledTable sx={{ minWidth: 650 }} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell align=\"center\">UAN</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Name</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Gross Wages</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EPF Wages</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EPS Wages</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EDLI Wages</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EPF Contribution</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EPS Contribution</StyledTableCell>\n                                    <StyledTableCell align=\"center\">EPF EPS DIFF</StyledTableCell>\n                                    <StyledTableCell align=\"center\">NCP Days</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Refund of Advance</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {orders?.employees?.map((item, index) => {\n                                    const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n\n                                    /* eslint no-underscore-dangle: 0 */\n                                    const count = getAttendence(item._id);\n                                    return (\n                                        <StyledTableRow\n                                            key={(page - 1) * 10 + index + 1}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                        >\n                                            <TableCell align=\"center\">{item?.companyDetails?.UAN}</TableCell>\n                                            <TableCell align=\"center\">{item?.personalDetails?.fullName}</TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round(\n                                                    (item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.hra * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.con * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.medical * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.education * count.count) / totalDaysOfMonth\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth)}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth)}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth)}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round(\n                                                    (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round(\n                                                    (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 8.33) / 100\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {Math.round(\n                                                    (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100\n                                                ) -\n                                                    Math.round(\n                                                        (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 8.33) / 100\n                                                    )}\n                                            </TableCell>\n                                            <TableCell align=\"center\"> {totalDaysOfMonth - (count.count ? count.count : 0)} </TableCell>\n                                            <TableCell align=\"center\"> 0 </TableCell>\n                                        </StyledTableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </StyledTable>\n                        <Pagination\n                            count={Math.floor(orders?.employeeCount / 10) + 1}\n                            color=\"primary\"\n                            style={{ float: 'right' }}\n                            page={page}\n                            onChange={handleChange}\n                        />\n                    </StyledContainer>\n                </Typography>\n                <div className={`view-salary-sidebar ${open}`}>\n                    <Typography variant=\"body2\">\n                        <PaymentSidepanel data={data} parentCallback={handleClose} count={datacount} />\n                    </Typography>\n                </div>\n            </StyledMainCardSalary>\n            <div id=\"capture\" style={{ display: 'none' }}>\n                <table style={{ textAlign: 'center', width: '100%', borderCollapse: 'collapse' }} width=\"100%\">\n                    <thead>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"5\">\n                                Total HR\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"5\">\n                                Bank Statement Salary Disbursement {month[date.getMonth()]}-{date.getDate()}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Sr No</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Name</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Bank Account Number</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Bank IFSC Code</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders?.employees?.map((item, index) => {\n                            const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n                            /* eslint no-underscore-dangle: 0 */\n                            const count = getAttendence(item._id);\n                            return (\n                                <tr>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>{index + 1}</td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fullName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.bankDetails.accountNo}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.bankDetails.ifscCode}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {Math.round(\n                                            (item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.hra * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.con * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.medical * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.education * count.count) / totalDaysOfMonth +\n                                                (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 8) -\n                                                (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            <div style={{ display: 'none' }}>\n                <table\n                    id=\"capture2\"\n                    style={{ textAlign: 'center', width: '100%', borderCollapse: 'collapse', margin: '10px' }}\n                    width=\"100%\"\n                >\n                    <thead>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                SCHEDULE\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                [See Rule 2(1)]\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                FORM B\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                WAGE REGISTER FOR THE MONTH OF {month[date.getMonth()]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"11\">\n                                Name of Owner:\n                            </td>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"10\">\n                                LIN:\n                            </td>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Sr. No.\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                UAN\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Name of Employee{' '}\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Fathers Name\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Sex\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Nature of Work\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Entilement\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Payable Days\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Earned\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                OT\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Total Earned\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Recovery\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Net Payment\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Employer Share PF Welfare Found\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Receipt by Employee / Bank Transaction ID\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Date of Payment\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Remarks\n                            </th>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>OT Hrs</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>OT Wages</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {orders?.employees?.map((item, index) => {\n                            const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n                            /* eslint no-underscore-dangle: 0 */\n                            const count = getAttendence(item._id);\n                            return (\n                                <tr>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>{index + 1}</td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.companyDetails.UAN}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fullName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fatherName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.gender}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.companyDetails.designation}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>Basic</td>\n                                        </tr>\n                                        <tr>\n                                            <td>HRA</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Con</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Medical</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Edu</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>{item.salaryDetails.basicSalary}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.hra}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.con}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.medical}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.education}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item.salaryDetails.basicSalary +\n                                                    item.salaryDetails.hra +\n                                                    item.salaryDetails.con +\n                                                    item.salaryDetails.medical +\n                                                    item.salaryDetails.education}\n                                            </td>\n                                        </tr>\n                                    </td>\n\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {count.count ? count.count : 0}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>Basic</td>\n                                        </tr>\n                                        <tr>\n                                            <td>HRA</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Con</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Medical</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Edu</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>{Math.round((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{Math.round((item?.salaryDetails?.hra * count.count) / totalDaysOfMonth)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{Math.round((item?.salaryDetails?.con * count.count) / totalDaysOfMonth)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{Math.round((item?.salaryDetails?.medical * count.count) / totalDaysOfMonth)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{Math.round((item?.salaryDetails?.education * count.count) / totalDaysOfMonth)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {Math.round(\n                                                    (item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.hra * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.con * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.medical * count.count) / totalDaysOfMonth +\n                                                        (item?.salaryDetails?.education * count.count) / totalDaysOfMonth\n                                                )}\n                                            </td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {count.ot ? count.ot : 0}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item?.salaryDetails?.dailyWages / 8}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {Math.round(\n                                            (item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.hra * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.con * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.medical * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.education * count.count) / totalDaysOfMonth +\n                                                (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 8)\n                                        )}\n                                    </td>\n\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>PF</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Canteen</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Advance </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Loan</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tax</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>\n                                                {Math.round(\n                                                    (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100\n                                                )}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {Math.round(\n                                                    (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100 +\n                                                        0 +\n                                                        0 +\n                                                        0 +\n                                                        0\n                                                )}\n                                            </td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {Math.round(\n                                            (item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.hra * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.con * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.medical * count.count) / totalDaysOfMonth +\n                                                (item?.salaryDetails?.education * count.count) / totalDaysOfMonth +\n                                                (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 8) -\n                                                (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100 +\n                                                0 +\n                                                0 +\n                                                0 +\n                                                0\n                                        )}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nexport default ECRChallan;\n"],"sourceRoot":""}