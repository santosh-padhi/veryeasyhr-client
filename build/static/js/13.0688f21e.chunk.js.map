{"version":3,"sources":["ui-component/payment/paymentsidepanel.js","../node_modules/@mui/icons-material/TableViewOutlined.js","views/payments/viewSalary.js"],"names":["PaymentSidepanel","props","parentCallback","data","count","todaydays","console","log","className","role","onKeyDown","tabIndex","onClick","style","cursor","alt","src","fontWeight","color","fontSize","marginLeft","personalDetails","fullName","marginBottom","companyDetails","designation","mobileNo","UAN","ot","formatDate","joiningDate","selectWages","Math","round","salaryDetails","basicSalary","hra","con","medical","education","canteen","incomeTax","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","daysInMonth","month","year","Date","getDate","printDocument","pdfTable","document","getElementById","documentDefinition","content","htmlToPdfmake","innerHTML","styles","table","textAlign","borderCollapse","width","th","border","padding","td","pdfMake","vfs","pdfFonts","createPdf","download","printDocument2","pdf","jsPDF","unit","format","userUnit","html","html2canvas","scale","then","save","ViewSalary","React","open","setOpen","page","setPage","date","setdate","setdata","employeeAttendance","setemployeeAttendance","datacount","setdatacount","useSelector","state","myEmployee","error","orders","dispatch","useDispatch","axios","get","getMonth","getFullYear","withCredentials","employeesAttendance","catch","clearErrors","getAttendence","employee","j","length","i","attendance","leave","overtime","name","salary","parentCallback3","salaryformat","parentCallback2","variant","component","Paper","sx","minWidth","align","employees","map","item","index","totalDaysOfMonth","parseInt","_id","scope","bankDetails","bankName","accountNo","handleClickOpen","floor","employeeCount","float","onChange","event","id","display","colSpan","ifscCode","margin","rowSpan","fatherName","gender","dailyWages"],"mappings":"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","file":"static/js/13.0688f21e.chunk.js","sourcesContent":["import React from 'react';\nimport './paymentsidepanel.css';\nimport BusinessCenterIcon from '@mui/icons-material/BusinessCenter';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport formatDate from '../../utils/date-format';\n\nconst PaymentSidepanel = (props) => {\n    const { parentCallback, data, count, todaydays } = props;\n    console.log(data);\n    return (\n        <div className=\"salary-sidepanel-container\">\n            <div className=\"salary-sidepanel-box1\">\n                <span className=\"close-sidebar\" role=\"button\" onKeyDown={parentCallback} tabIndex={-27} onClick={parentCallback}>\n                    <CancelIcon style={{ cursor: 'pointer' }} />\n                </span>\n                <div className=\"salary-sidepanel-box-img\">\n                    <img\n                        className=\"salary-sidepanel-img\"\n                        alt=\"user\"\n                        src=\"https://ik.imagekit.io/6vy1oi4m4uh/profile-pic_DBEIl1ZKUGo.png?updatedAt=1637958057447\"\n                    />\n                </div>\n                <div className=\"salary-sidepanel-box-head\">\n                    <h3 style={{ fontWeight: 700, color: '#000000', fontSize: '24px', marginLeft: '-25px' }}>\n                        {data?.personalDetails?.fullName}\n                    </h3>\n                    <div className=\"sidepanel-icon\" style={{ marginBottom: '20px' }}>\n                        <span>\n                            <BusinessCenterIcon />\n                            <span>{data?.companyDetails?.designation}</span>\n                        </span>\n                        <span>\n                            <PhoneIcon />\n                            <span>{data?.personalDetails?.mobileNo}</span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box2\">\n                <div>\n                    <p>UAN No</p>\n                    <b>{data?.companyDetails?.UAN}</b>\n                </div>\n                <div>\n                    <span style={{ marginLeft: '13px' }}>\n                        <p>Paid Days</p>\n                        <b>{count.count ? count.count : 0}</b>\n                    </span>\n                    <span>\n                        <p>OT</p>\n                        <b>{count.ot ? count.ot : 0}</b>\n                    </span>\n                </div>\n                <div>\n                    <p>Joining Date</p>\n                    <b>\n                        <b>{formatDate(data?.companyDetails?.joiningDate)}</b>\n                    </b>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box3\">\n                <div className=\"salary-sidepanel-box-head3\">Total Earning</div>\n                <div className=\"salary-sidepanel-box-cont\">\n                    <div>\n                        <p>Basic Salary</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.basicSalary * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.basicSalary) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>HRA</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.hra * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.hra) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Con</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.con * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.con) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Medical</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.medical * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.medical) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Education</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.education * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.education) * count.count}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Canteen</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((data?.salaryDetails?.canteen * count.count) / todaydays)\n                                : Math.round(data?.salaryDetails?.canteen) * count.count}\n                        </b>\n                    </div>\n                </div>\n            </div>\n            <div className=\"salary-sidepanel-box3\">\n                <div className=\"salary-sidepanel-box-head3\">Total Deduction</div>\n                <div className=\"salary-sidepanel-box-cont\">\n                    <div>\n                        <p>Provident Fund (PF)</p>\n                        <b>\n                            {data?.companyDetails?.selectWages === 'Monthly Wages'\n                                ? Math.round((((data?.salaryDetails?.basicSalary * count.count) / todaydays) * 12) / 100)\n                                : Math.round((data?.salaryDetails?.basicSalary * count.count * 12) / 100)}\n                        </b>\n                    </div>\n                    <div>\n                        <p>Canteen</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Advance Payment</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Loan</p>\n                        <b>0.00</b>\n                    </div>\n                    <div>\n                        <p>Tax</p>\n                        <b>{Math.round(data?.salaryDetails?.incomeTax)}</b>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default PaymentSidepanel;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 7H9c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 2v2H9V9h10zm-6 6v-2h2v2h-2zm2 2v2h-2v-2h2zm-4-2H9v-2h2v2zm6-2h2v2h-2v-2zm-8 4h2v2H9v-2zm8 2v-2h2v2h-2zM6 17H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v1h-2V5H5v10h1v2z\"\n}), 'TableViewOutlined');\n\nexports.default = _default;","import * as React from 'react';\n// material ui import\nimport { Typography } from '@mui/material';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport AttendanceTopbar from 'ui-component/attendence-topbar';\nimport { StyledContainer, StyledTable, StyledTableRow, StyledTableCell, StyledMainCardSalary } from 'ui-component/tables/tablestyle';\nimport TableViewOutlinedIcon from '@mui/icons-material/TableViewOutlined';\nimport Pagination from '@mui/material/Pagination';\nimport PaymentSidepanel from 'ui-component/payment/paymentsidepanel';\nimport jsPDF from 'jspdf';\nimport pdfMake from 'pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport htmlToPdfmake from 'html-to-pdfmake';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myEmployee } from 'store/actions/employeeAction';\nimport formatDate from 'utils/date-format';\nimport { clearErrors } from 'store/actions/userActions';\nimport axios from 'axios';\n\nfunction daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n}\n\nconst getAttendence = async (employee) => {\n    const date = new Date();\n    const { data } = await axios\n        .get(`/api/v1/employee/attendance/mylist/${date.getMonth() + 1}/${date.getFullYear()}/${employee}`, {\n            withCredentials: true\n        })\n        .then((data) => {\n            console.log(data);\n            return data;\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    console.log(data);\n    let count = 0;\n    for (let i = 0; i < data?.employeesAttendance[0]?.employeesAttendance?.length; i += 1) {\n        if (data.employeesAttendance[0]?.employeesAttendance[i]?.attendance === true) {\n            count += 1;\n        }\n    }\n    return count;\n};\n\nfunction printDocument() {\n    const pdfTable = document.getElementById('capture');\n    // html to pdf format\n    const html = htmlToPdfmake(pdfTable.innerHTML);\n    const documentDefinition = {\n        content: html,\n\n        styles: {\n            table: {\n                textAlign: 'center',\n                borderCollapse: 'collapse',\n                width: '100%'\n            },\n            th: {\n                border: '1px solid black',\n                borderCollapse: 'collapse',\n                padding: '10px 20px'\n            },\n            td: {\n                border: '1px solid black',\n                borderCollapse: 'collapse',\n                padding: '10px 20px'\n            }\n        }\n    };\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\n    pdfMake.createPdf(documentDefinition).download();\n}\n\nfunction printDocument2() {\n    const pdfTable = document.getElementById('capture2');\n    /* eslint-disable new-cap */\n    const pdf = new jsPDF({ unit: 'px', format: 'a4', userUnit: 'px' });\n    pdf.html(pdfTable, { html2canvas: { scale: 0.34 } }).then(() => {\n        pdf.save('test.pdf');\n    });\n}\n// ==============================|| View Salary Page ||============================== //\n\nconst ViewSalary = () => {\n    const [open, setOpen] = React.useState('inactivesidebar');\n    const [page, setPage] = React.useState(1);\n    const [date, setdate] = React.useState(new Date());\n    const [data, setdata] = React.useState({});\n    const [employeeAttendance, setemployeeAttendance] = React.useState([]);\n    const [datacount, setdatacount] = React.useState({});\n    const handleClickOpen = (item) => {\n        setOpen('activesidebar');\n        setdata(item);\n    };\n\n    const { error, orders } = useSelector((state) => state.myEmployee);\n\n    const handleClose = () => {\n        setOpen('inactivesidebar');\n    };\n\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        axios\n            .get(`/api/v1/employee/attendance/mylist/${date.getMonth() + 1}/${date.getFullYear()}?limit=${9999999999}`, {\n                withCredentials: true\n            })\n            .then((data) => {\n                setemployeeAttendance(data.data.employeesAttendance);\n                console.log(data);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, [date, page]);\n\n    React.useEffect(() => {\n        dispatch(myEmployee(page));\n        if (error) {\n            console.log(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, page]);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n\n    const handleDate = (date) => {\n        setdate(date);\n    };\n\n    const getAttendence = (employee) => {\n        let count = 0;\n        let ot = 0;\n\n        for (let j = 0; j < employeeAttendance.length; j += 1) {\n            if (employeeAttendance[j]?.employee === employee) {\n                for (let i = 0; i < employeeAttendance[j]?.employeeAttendance?.length; i += 1) {\n                    if (\n                        employeeAttendance[j]?.employeeAttendance[i]?.attendance === true ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Casual Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Sick Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Leave' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Holiday' ||\n                        employeeAttendance[j]?.employeeAttendance[i]?.leave === 'Paid Weekly Off'\n                    ) {\n                        count += 1;\n                    }\n                    if (employeeAttendance[j]?.employeeAttendance[i]?.overtime) {\n                        ot += employeeAttendance[j]?.employeeAttendance[i]?.overtime;\n                    }\n                }\n\n                return { count, ot };\n            }\n        }\n        return 0;\n    };\n    console.log(orders);\n    const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n    return (\n        <>\n            <StyledMainCardSalary>\n                <AttendanceTopbar\n                    name=\"View Salary List\"\n                    salary=\"true\"\n                    date=\"true\"\n                    parentCallback={printDocument}\n                    parentCallback3={printDocument2}\n                    salaryformat=\"true\"\n                    parentCallback2={handleDate}\n                />\n                <Typography variant=\"body2\">\n                    <StyledContainer component={Paper}>\n                        <StyledTable sx={{ minWidth: 650 }} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell align=\"center\">Sr No.</StyledTableCell>\n                                    <StyledTableCell align=\"center\">UAN No.</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Name</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Paid Days</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Total OT Hours</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Bank Name</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Account No</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Net Salary</StyledTableCell>\n                                    <StyledTableCell align=\"center\">View Salary</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {orders?.employees?.map((item, index) => {\n                                    const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n                                    const count = getAttendence(item._id);\n\n                                    console.log(Math.round(item?.salaryDetails?.basicSalary));\n                                    /* eslint no-underscore-dangle: 0 */\n                                    return (\n                                        <StyledTableRow\n                                            key={(page - 1) * 10 + index + 1}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                        >\n                                            <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                                {(page - 1) * 10 + index + 1}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{item?.companyDetails?.UAN}</TableCell>\n                                            <TableCell align=\"center\">{item?.personalDetails?.fullName}</TableCell>\n                                            <TableCell align=\"center\">{count?.count ? count?.count : 0}</TableCell>\n                                            <TableCell align=\"center\">{count?.ot ? count?.ot : 0}</TableCell>\n                                            <TableCell align=\"center\">{item?.bankDetails?.bankName}</TableCell>\n                                            <TableCell align=\"center\">{item?.bankDetails?.accountNo}</TableCell>\n                                            <TableCell align=\"center\">\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round(\n                                                          (item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) /\n                                                              totalDaysOfMonth +\n                                                              (item?.salaryDetails?.hra * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                              (item?.salaryDetails?.con * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                              (item?.salaryDetails?.medical * parseInt(count.count, 10)) /\n                                                                  totalDaysOfMonth +\n                                                              (item?.salaryDetails?.education * parseInt(count.count, 10)) /\n                                                                  totalDaysOfMonth +\n                                                              (item?.salaryDetails?.basicSalary / totalDaysOfMonth / 4) *\n                                                                  (count.ot ? count.ot : 0) -\n                                                              (((item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) /\n                                                                  totalDaysOfMonth) *\n                                                                  12) /\n                                                                  100\n                                                      )\n                                                    : Math.round(\n                                                          item?.salaryDetails?.basicSalary * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.hra * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.con * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.medical * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.education * parseInt(count.count, 10) +\n                                                              (item?.salaryDetails?.basicSalary / 4) * (count.ot ? count.ot : 0) -\n                                                              (item?.salaryDetails?.basicSalary * parseInt(count.count, 10) * 12) / 100\n                                                      )}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <TableViewOutlinedIcon\n                                                    onClick={() => {\n                                                        handleClickOpen(item);\n                                                        setdatacount(count);\n                                                    }}\n                                                    style={{ cursor: 'pointer' }}\n                                                />\n                                            </TableCell>\n                                        </StyledTableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </StyledTable>\n                        <Pagination\n                            count={Math.floor(orders?.employeeCount / 10) + 1}\n                            color=\"primary\"\n                            style={{ float: 'right' }}\n                            page={page}\n                            onChange={handleChange}\n                        />\n                    </StyledContainer>\n                </Typography>\n                <div className={`view-salary-sidebar ${open}`}>\n                    <Typography variant=\"body2\">\n                        <PaymentSidepanel\n                            data={data}\n                            parentCallback={handleClose}\n                            count={datacount}\n                            todaydays={parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10)}\n                        />\n                    </Typography>\n                </div>\n            </StyledMainCardSalary>\n            <div id=\"capture\" style={{ display: 'none' }}>\n                <table style={{ textAlign: 'center', width: '100%', borderCollapse: 'collapse' }} width=\"100%\">\n                    <thead>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"5\">\n                                Total HR\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"5\">\n                                Bank Statement Salary Disbursement {month[date.getMonth()]}-{date.getDate()}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Sr No</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Name</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Bank Account Number</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Bank IFSC Code</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Payable Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders?.employees?.map((item, index) => {\n                            const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n\n                            /* eslint no-underscore-dangle: 0 */\n                            const count = getAttendence(item._id);\n                            return (\n                                <tr>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>{index + 1}</td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fullName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.bankDetails.accountNo}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.bankDetails.ifscCode}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                            ? Math.round(\n                                                  (item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.hra * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.con * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.medical * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.education * parseInt(count.count, 10)) / totalDaysOfMonth -\n                                                      // (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 8) -\n                                                      (((item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) / totalDaysOfMonth) *\n                                                          12) /\n                                                          100\n                                              )\n                                            : Math.round(\n                                                  item?.salaryDetails?.basicSalary * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.hra * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.con * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.medical * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.education * parseInt(count.count, 10) -\n                                                      // (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 4) -\n                                                      (item?.salaryDetails?.basicSalary * parseInt(count.count, 10) * 12) / 100\n                                              )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            <div style={{ display: 'none' }}>\n                <table\n                    id=\"capture2\"\n                    style={{ textAlign: 'center', width: '100%', borderCollapse: 'collapse', margin: '10px' }}\n                    width=\"100%\"\n                >\n                    <thead>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                SCHEDULE\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                [See Rule 2(1)]\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                FORM B\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"21\">\n                                WAGE REGISTER FOR THE MONTH OF {month[date.getMonth()]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"11\">\n                                Name of Owner:\n                            </td>\n                            <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"10\">\n                                LIN:\n                            </td>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Sr. No.\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                UAN\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Name of Employee{' '}\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Fathers Name\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Sex\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Nature of Work\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Entitlement\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Payable Days\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Earned\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                OT\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Total Earned\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} colSpan=\"2\">\n                                Recovery\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Net Payment\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Employer Share PF Welfare Found\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Receipt by Employee / Bank Transaction ID\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Date of Payment\n                            </th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} rowSpan=\"2\">\n                                Remarks\n                            </th>\n                        </tr>\n                        <tr>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>OT Hrs</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>OT Rates</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Particulars</th>\n                            <th style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>Rate</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {orders?.employees?.map((item, index) => {\n                            const totalDaysOfMonth = parseInt(daysInMonth(date.getMonth() + 1, date.getFullYear()), 10);\n\n                            /* eslint no-underscore-dangle: 0 */\n                            const count = getAttendence(item._id);\n                            return (\n                                <tr>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>{index + 1}</td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.companyDetails.UAN}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fullName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.fatherName}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.personalDetails.gender}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item.companyDetails.designation}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>Basic</td>\n                                        </tr>\n                                        <tr>\n                                            <td>HRA</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Con</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Medical</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Edu</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>{item.salaryDetails.basicSalary}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.hra}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.con}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.medical}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{item.salaryDetails.education}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item.salaryDetails.basicSalary +\n                                                    item.salaryDetails.hra +\n                                                    item.salaryDetails.con +\n                                                    item.salaryDetails.medical +\n                                                    item.salaryDetails.education}\n                                            </td>\n                                        </tr>\n                                    </td>\n\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {parseInt(count.count, 10) ? parseInt(count.count, 10) : 0}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>Basic</td>\n                                        </tr>\n                                        <tr>\n                                            <td>HRA</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Con</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Medical</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Edu</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth)\n                                                    : Math.round(item?.salaryDetails?.basicSalary) * count.count}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round((item?.salaryDetails?.hra * count.count) / totalDaysOfMonth)\n                                                    : Math.round(item?.salaryDetails?.hra) * count.count}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round((item?.salaryDetails?.con * count.count) / totalDaysOfMonth)\n                                                    : Math.round(item?.salaryDetails?.con) * count.count}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round((item?.salaryDetails?.medical * count.count) / totalDaysOfMonth)\n                                                    : Math.round(item?.salaryDetails?.medical) * count.count}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round((item?.salaryDetails?.education * count.count) / totalDaysOfMonth)\n                                                    : Math.round(item?.salaryDetails?.education) * count.count}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round(\n                                                          (item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) /\n                                                              totalDaysOfMonth +\n                                                              (item?.salaryDetails?.hra * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                              (item?.salaryDetails?.con * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                              (item?.salaryDetails?.medical * parseInt(count.count, 10)) /\n                                                                  totalDaysOfMonth +\n                                                              (item?.salaryDetails?.education * parseInt(count.count, 10)) /\n                                                                  totalDaysOfMonth\n                                                      )\n                                                    : Math.round(\n                                                          item?.salaryDetails?.basicSalary * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.hra * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.con * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.medical * parseInt(count.count, 10) +\n                                                              item?.salaryDetails?.education * parseInt(count.count, 10)\n                                                      )}\n                                            </td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {count.ot ? count.ot : 0}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                            ? Math.round(item?.salaryDetails?.dailyWages / totalDaysOfMonth / 8)\n                                            : Math.round(item?.salaryDetails?.dailyWages / 8)}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                            ? Math.round(\n                                                  (item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.hra * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.con * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.medical * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.education * parseInt(count.count, 10)) / totalDaysOfMonth\n                                              )\n                                            : Math.round(\n                                                  item?.salaryDetails?.basicSalary * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.hra * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.con * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.medical * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.education * parseInt(count.count, 10)\n                                              )}\n                                    </td>\n\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>PF</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Canteen</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Advance </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Loan</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tax</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Total</td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round(\n                                                          (((item?.salaryDetails?.basicSalary * count.count) / totalDaysOfMonth) * 12) / 100\n                                                      )\n                                                    : Math.round((item?.salaryDetails?.basicSalary * count.count * 12) / 100)}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{0}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                                    ? Math.round(\n                                                          (((item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) /\n                                                              totalDaysOfMonth) *\n                                                              12) /\n                                                              100 +\n                                                              0 +\n                                                              0 +\n                                                              0 +\n                                                              0\n                                                      )\n                                                    : Math.round(\n                                                          (item?.salaryDetails?.basicSalary * parseInt(count.count, 10) * 12) / 100 +\n                                                              0 +\n                                                              0 +\n                                                              0 +\n                                                              0\n                                                      )}\n                                            </td>\n                                        </tr>\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }}>\n                                        {item?.companyDetails?.selectWages === 'Monthly Wages'\n                                            ? Math.round(\n                                                  (item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.hra * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.con * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.medical * parseInt(count.count, 10)) / totalDaysOfMonth +\n                                                      (item?.salaryDetails?.education * parseInt(count.count, 10)) / totalDaysOfMonth -\n                                                      // (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 8) -\n                                                      (((item?.salaryDetails?.basicSalary * parseInt(count.count, 10)) / totalDaysOfMonth) *\n                                                          12) /\n                                                          100 +\n                                                      0 +\n                                                      0 +\n                                                      0 +\n                                                      0\n                                              )\n                                            : Math.round(\n                                                  item?.salaryDetails?.basicSalary * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.hra * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.con * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.medical * parseInt(count.count, 10) +\n                                                      item?.salaryDetails?.education * parseInt(count.count, 10) -\n                                                      // (count.ot ? count.ot : 0) * (item?.salaryDetails?.dailyWages / 4) -\n                                                      (item?.salaryDetails?.basicSalary * parseInt(count.count, 10) * 12) / 100\n                                              )}\n                                    </td>\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                    <td style={{ border: '1px solid black', borderCollapse: 'collapse', padding: '5px' }} />\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nexport default ViewSalary;\n"],"sourceRoot":""}