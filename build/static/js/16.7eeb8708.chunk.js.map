{"version":3,"sources":["store/actions/employeeAction.js","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js","views/roles/addUser.js"],"names":["axios","defaults","withCredentials","addEmployee","userData","dispatch","a","type","ADD_EMPLOYEE_REQUEST","config","headers","console","log","y","personalDetails","fullName","fatherName","mobileNo","gender","dob","date","currentAddress","permanentAddress","companyDetails","UAN","uanNumber","aadhaarNo","aadhaarNumber","panNo","panNumber","drivingLicense","drivingLicenses","designation","joiningDate","selectWages","sickLeave","casualLeave","salaryDetails","dailyWages","basicSalary","hra","con","medical","education","canteen","incomeTax","bankDetails","bankName","ifscCode","bankIfsc","accountNo","PFNominee","pfNominee","gratuityNominee","leaveNominee","post","data","ADD_EMPLOYEE_SUCCESS","payload","user","ADD_EMPLOYEE_FAIL","myEmployee","page","MY_EMPLOYEE_REQUEST","get","MY_EMPLOYEE_SUCCESS","MY_EMPLOYEE_FAIL","response","addRoles","ADD_ROLES_REQUEST","ADD_ROLES_SUCCESS","ADD_ROLES_FAIL","clearErrors","CLEAR_ERRORS","getContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ContainerRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","unit","Math","max","xs","Container","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","ColorButton","Button","marginTop","color","fontFamily","fontSize","backgroundColor","AddUser","useState","setName","phoneNo","setPhoneNo","email","setEmail","password","setPassword","companyName","setCompanyName","useDispatch","useSelector","state","addRole","error","success","auth","navigate","useNavigate","successes","setSuccess","text","setText","open","vertical","horizontal","setState","useEffect","ADD_ROLES_RESET","handleClose","role","Box","p","variant","gutterBottom","onSubmit","e","preventDefault","x","encType","container","alignItems","justifyContent","style","item","sm","required","id","label","placeholder","fullWidth","autoComplete","onChange","target","anchorOrigin","onClose","autoHideDuration","severity","sx"],"mappings":"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","file":"static/js/16.7eeb8708.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    MY_EMPLOYEE_FAIL,\n    MY_EMPLOYEE_REQUEST,\n    MY_EMPLOYEE_SUCCESS,\n    ADD_EMPLOYEE_FAIL,\n    ADD_EMPLOYEE_REQUEST,\n    ADD_EMPLOYEE_SUCCESS,\n    ADD_ROLES_FAIL,\n    ADD_ROLES_REQUEST,\n    ADD_ROLES_SUCCESS,\n    ADD_ROLES_RESET,\n    CLEAR_ERRORS\n} from 'store/constant/employeeConstant';\n\naxios.defaults.withCredentials = true;\n// Add Employee\nexport const addEmployee = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: ADD_EMPLOYEE_REQUEST });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                withCredentials: true\n            }\n        };\n        console.log(userData);\n        const y = {\n            personalDetails: {\n                fullName: userData.fullName,\n                fatherName: userData.fatherName,\n                mobileNo: userData.mobileNo,\n                gender: userData.gender,\n                dob: userData.date,\n                currentAddress: userData.currentAddress,\n                permanentAddress: userData.permanentAddress\n            },\n            companyDetails: {\n                UAN: userData.uanNumber,\n                aadhaarNo: userData.aadhaarNumber,\n                panNo: userData.panNumber,\n                drivingLicense: userData.drivingLicenses,\n                designation: userData.designation,\n                joiningDate: userData.joiningDate,\n                selectWages: userData.selectWages,\n                sickLeave: userData.sickLeave,\n                casualLeave: userData.casualLeave\n            },\n            salaryDetails: {\n                dailyWages: userData.dailyWages,\n                basicSalary: userData.basicSalary,\n                hra: userData.hra,\n                con: userData.con,\n                medical: userData.medical,\n                education: userData.education,\n                canteen: userData.canteen,\n                incomeTax: userData.incomeTax\n            },\n            bankDetails: {\n                bankName: userData.bankName,\n                ifscCode: userData.bankIfsc,\n                accountNo: userData.accountNo,\n                PFNominee: userData.pfNominee,\n                gratuityNominee: userData.gratuityNominee,\n                leaveNominee: userData.leaveNominee\n            }\n        };\n        const { data } = await axios.post('/api/v1/employees/new', y, config);\n\n        dispatch({\n            type: ADD_EMPLOYEE_SUCCESS,\n            payload: data.user\n        });\n        dispatch({ type: ADD_EMPLOYEE_REQUEST });\n    } catch (error) {\n        dispatch({\n            type: ADD_EMPLOYEE_FAIL,\n            payload: error\n        });\n    }\n};\n\n// Get currently logged in user employee list\nexport const myEmployee = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: MY_EMPLOYEE_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/employees/mylist?page=${page}`, {\n            withCredentials: true\n        });\n        console.log(data);\n        dispatch({\n            type: MY_EMPLOYEE_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({\n            type: MY_EMPLOYEE_FAIL,\n            payload: error.response\n        });\n    }\n};\n// Add Roles\nexport const addRoles = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: ADD_ROLES_REQUEST });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                withCredentials: true\n            }\n        };\n\n        const { data } = await axios.post('/api/v1/admin/register', userData, config);\n        dispatch({\n            type: ADD_ROLES_SUCCESS,\n            payload: data\n        });\n        dispatch({ type: ADD_ROLES_REQUEST });\n    } catch (error) {\n        dispatch({\n            type: ADD_ROLES_FAIL,\n            payload: error\n        });\n    }\n};\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    });\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { Container, Box, Snackbar, Alert } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addRoles, clearErrors } from '../../store/actions/employeeAction';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ADD_ROLES_RESET } from '../../store/constant/employeeConstant';\n// ==============================|| SAMPLE PAGE ||============================== //\n\nconst ColorButton = styled(Button)(({ theme }) => ({\n    marginTop: '20px',\n    color: 'white',\n    fontFamily: 'Poppins',\n    fontSize: '22px',\n    width: '100%',\n    backgroundColor: '#009FBE'\n}));\n\nexport default function AddUser() {\n    const [name, setName] = useState('');\n    const [phoneNo, setPhoneNo] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const dispatch = useDispatch();\n    const { error, success } = useSelector((state) => state.addRole);\n    const { user } = useSelector((state) => state.auth);\n    const navigate = useNavigate();\n    const [successes, setSuccess] = useState('success');\n    const [text, setText] = useState('Successfully Added!');\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center'\n    });\n    const { vertical, horizontal, open } = state;\n\n    useEffect(() => {\n        if (error) {\n            dispatch(clearErrors());\n            setText('Error!');\n            setSuccess('error');\n            setState({\n                open: true,\n                ...{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }\n            });\n        }\n        if (success) {\n            navigate('/roles/add-user');\n            dispatch({ type: ADD_ROLES_RESET });\n            setText('New User Added !');\n            setSuccess('success');\n            setState({\n                open: true,\n                ...{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }\n            });\n        }\n    }, [dispatch, error, success]);\n    const handleClose = () => {\n        setState({ ...state, open: false });\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const x = {};\n        x.name = name;\n        x.phoneNo = phoneNo;\n        x.email = email;\n        x.password = password;\n        x.companyName = companyName;\n        console.log(x);\n        dispatch(addRoles(x));\n    };\n\n    return (\n        <>\n            {user && user.role === 'admin' && (\n                <Container component={Box} p={4}>\n                    <Typography variant=\"h1\" gutterBottom>\n                        Add Client\n                    </Typography>\n                    <form onSubmit={submitHandler} encType=\"multipart/form-data\">\n                        <Grid container spacing={4} alignItems=\"center\" justifyContent=\"center\" style={{ marginTop: '35px' }}>\n                            <Grid item xs={12} sm={5}>\n                                <TextField\n                                    required\n                                    id=\"name\"\n                                    name=\"name\"\n                                    label=\"Full name\"\n                                    placeholder=\"Enter Full Name\"\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    variant=\"outlined\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={5}>\n                                <TextField\n                                    required\n                                    id=\"phoneNo\"\n                                    name=\"phoneNo\"\n                                    label=\"Mobile Number\"\n                                    placeholder=\"Enter Mobile Number\"\n                                    fullWidth\n                                    autoComplete=\"mobile-number\"\n                                    variant=\"outlined\"\n                                    value={phoneNo}\n                                    onChange={(e) => setPhoneNo(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={5}>\n                                <TextField\n                                    required\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    label=\"Email\"\n                                    placeholder=\"Enter Email Address\"\n                                    fullWidth\n                                    autoComplete=\"shipping address-level2\"\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={5}>\n                                <TextField\n                                    required\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"Set Password\"\n                                    placeholder=\"Set User Password\"\n                                    fullWidth\n                                    autoComplete=\"shipping postal-code\"\n                                    variant=\"outlined\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={10}>\n                                <TextField\n                                    required\n                                    id=\"companyName\"\n                                    name=\"companyName\"\n                                    label=\"Company Name\"\n                                    fullWidth\n                                    autoComplete=\"Company Name\"\n                                    variant=\"outlined\"\n                                    value={companyName}\n                                    onChange={(e) => setCompanyName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={10}>\n                                <ColorButton variant=\"contained\" type=\"submit\">\n                                    Add Client\n                                </ColorButton>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        onClose={handleClose}\n                        autoHideDuration={3000}\n                        key={vertical + horizontal}\n                    >\n                        <Alert\n                            onClose={handleClose}\n                            severity={successes}\n                            sx={{ width: '100%' }}\n                            style={{ backgroundColor: 'green', color: 'white' }}\n                        >\n                            {text}\n                        </Alert>\n                    </Snackbar>\n                </Container>\n            )}\n        </>\n    );\n}\n"],"sourceRoot":""}