{"version":3,"sources":["ui-component/tables/increasetextfield.js","views/attedance/overtime.js"],"names":["OvertimeInput","props","value","employee","date","dispatch","useDispatch","React","useState","val","setval","TextField","id","variant","onChange","event","target","style","width","height","color","margin","cursor","onClick","myEmployeeAttendenceOvertime","getMonth","getFullYear","getDate","Overtime","page","setPage","useSelector","state","getAttendence","error","attend","Date","setdate","myAttendence","console","log","clearErrors","name","search","filter","parentCallback2","Typography","component","Paper","sx","minWidth","TableHead","TableRow","align","TableBody","employeesAttendance","map","item","index","y","i","employeeAttendance","length","overtime","border","TableCell","scope","UAN","fullName","formatDate","joiningDate","designation","dailyWages","Pagination","count","Math","floor","float"],"mappings":"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","file":"static/js/21.a35fe9ee.chunk.js","sourcesContent":["import { AiFillPlusCircle } from 'react-icons/ai';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { myEmployeeAttendenceOvertime } from '../../store/actions/attendenceAction';\n\nexport default function OvertimeInput(props) {\n    const { value, employee, date } = props;\n    const dispatch = useDispatch();\n\n    const [val, setval] = React.useState(value);\n    const handleChange = (event) => {\n        setval(event.target.value);\n    };\n\n    return (\n        <>\n            <TextField id=\"outlined-basic\" variant=\"outlined\" value={val} onChange={handleChange} />\n            <AiFillPlusCircle\n                style={{ width: '40px', height: '40px', color: '#009FBE', margin: '5px', cursor: 'pointer' }}\n                onClick={() => {\n                    dispatch(myEmployeeAttendenceOvertime(employee, date.getMonth() + 1, date.getFullYear(), val, date.getDate()));\n                }}\n            />\n        </>\n    );\n}\n","import * as React from 'react';\n// material ui import\nimport { Typography } from '@mui/material';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport AttendanceTopbar from 'ui-component/attendence-topbar';\nimport { StyledContainer, StyledMainCard, StyledTable, StyledTableCell, StyledTableRow } from 'ui-component/tables/tablestyle';\nimport OvertimeInput from 'ui-component/tables/increasetextfield';\nimport Pagination from '@mui/material/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport formatDate from 'utils/date-format';\nimport { clearErrors } from 'store/actions/userActions';\nimport { myAttendence } from 'store/actions/attendenceAction';\n\n// ==============================|| OVERTIME PAGE ||============================== //\n\nconst Overtime = () => {\n    const dispatch = useDispatch();\n    const [page, setPage] = React.useState(1);\n    const { error, attend } = useSelector((state) => state.getAttendence);\n    const [date, setdate] = React.useState(new Date());\n    React.useEffect(() => {\n        dispatch(myAttendence(page, date.getMonth(), date.getFullYear()));\n        if (error) {\n            console.log(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, page, date]);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n    const handleDate = (date) => {\n        setdate(date);\n    };\n\n    console.log(attend);\n\n    return (\n        <StyledMainCard>\n            <AttendanceTopbar name=\"Employees OverTime List\" search=\"true\" date=\"true\" filter=\"true\" parentCallback2={handleDate} />\n            <Typography variant=\"body2\">\n                <StyledContainer component={Paper}>\n                    <StyledTable sx={{ minWidth: 650 }} aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"center\">Sr No.</StyledTableCell>\n                                <StyledTableCell align=\"center\">UAN No.</StyledTableCell>\n                                <StyledTableCell align=\"center\">Name</StyledTableCell>\n                                <StyledTableCell align=\"center\">Joining Date</StyledTableCell>\n                                <StyledTableCell align=\"center\">Designation</StyledTableCell>\n                                <StyledTableCell align=\"center\">Daily wages</StyledTableCell>\n                                <StyledTableCell align=\"center\">Total OT</StyledTableCell>\n                                <StyledTableCell align=\"center\">Add Over Time (O.T)</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {attend?.employeesAttendance?.map((item, index) => {\n                                let y = 0;\n                                for (let i = 0; i < item.employeeAttendance.length; i += 1) {\n                                    if (item.employeeAttendance[i].date === date.getDate()) {\n                                        y = item.employeeAttendance[i].overtime;\n                                    }\n                                }\n                                return (\n                                    <StyledTableRow\n                                        key={(page - 1) * 10 + index + 1}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                            {(page - 1) * 10 + index + 1}\n                                        </TableCell>\n                                        <TableCell align=\"center\">{item?.UAN}</TableCell>\n                                        <TableCell align=\"center\">{item?.fullName}</TableCell>\n                                        <TableCell align=\"center\">{formatDate(item?.joiningDate)}</TableCell>\n                                        <TableCell align=\"center\">{item?.designation}</TableCell>\n                                        <TableCell align=\"center\">{item?.dailyWages}</TableCell>\n                                        <TableCell align=\"center\">{y}</TableCell>\n                                        <TableCell align=\"center\">\n                                            <OvertimeInput employee={item.employee} date={date} value={y} />\n                                        </TableCell>\n                                    </StyledTableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </StyledTable>\n                    <Pagination\n                        count={Math.floor(attend?.length / 10) + 1}\n                        color=\"primary\"\n                        style={{ float: 'right' }}\n                        page={page}\n                        onChange={handleChange}\n                    />\n                </StyledContainer>\n            </Typography>\n        </StyledMainCard>\n    );\n};\n\nexport default Overtime;\n"],"sourceRoot":""}